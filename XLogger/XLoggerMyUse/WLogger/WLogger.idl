// WLogger.idl : WLogger 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(WLogger.tlb)和封送处理代码。

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(A9B29104-51FD-4410-8911-DAE6A3EF8B83),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface ILogger : IDispatch{
    [id(1)] HRESULT Write([in] BSTR* writeStr, [in] LONG wantWriteLen, [out, retval] LONG* writedLen);
    [id(3)] HRESULT Exit();
    [id(4)] HRESULT Read([in, out] BSTR* buf, [in] LONG bufLen, [out, retval] LONG* readedLen);
    [id(5)] HRESULT InitLog([in] BSTR logPath, [in] LONG level, [in] LONG fileSize, [in] LONG fileCount);
    [id(6)] HRESULT log([in] BSTR text, [in] LONG len, [out, retval] LONG* logged);
};
[
	uuid(4459DB77-4469-4401-A6F8-6BE8D0DAB7F4),
	version(1.0),
]
library WLoggerLib
{
	importlib("stdole2.tlb");
	[
		uuid(D768101C-494E-4B20-920C-13E2D5594DEB)		
	]
	coclass Logger
	{
		[default] interface ILogger;
	};
};

